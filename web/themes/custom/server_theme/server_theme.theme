<?php

/**
 * @file
 * Functions to support theming.
 */
use Drupal\user\Entity\User;
use Drupal\og\Og;
use Drupal\Core\Url;
use Drupal\Core\Link;

/**
 * @file
 * Theme custom logic.
 */

/**
 * Implements hook_theme().
 */
function server_theme_theme() {
  $info = [];

  $info['server_theme_tag'] = [
    'variables' => [
      'url' => NULL,
      'title' => NULL,
    ],
  ];

  // Simple card - Hero.
  $info['server_theme_card__hero'] = [
    'variables' => [
      'image' => NULL,
      'image_alt' => NULL,
      'title' => NULL,
      'url' => NULL,
      'body' => NULL,
      'author' => NULL,
      'date' => NULL,
    ],
  ];

  // Simple card.
  $info['server_theme_card__simple'] = [
    'variables' => [
      'image' => NULL,
      'image_alt' => NULL,
      'title' => NULL,
      'url' => NULL,
      'body' => NULL,
      // A list of links.
      'tags' => [],
      'author' => NULL,
    ],
  ];

  // Multiple cards.
  $info['server_theme_cards'] = [
    'variables' => [
      // A list of cards.
      'items' => [],
    ],
  ];

  // Call to action.
  $info['server_theme_cta'] = [
    'variables' => [
      'title' => NULL,
      'subtitle' => NULL,
      'url' => NULL,
      'url_title' => NULL,
    ],
  ];

  // Content tags.
  $info['server_theme_content__tags'] = [
    'variables' => [
      // A list of links.
      'tags' => [],
    ],
  ];

  $info['server_theme_content__image_and_teaser'] = [
    'variables' => [
      'image' => NULL,
      'image_alt' => NULL,
      'teaser' => NULL,
    ],
  ];

  // Content header (node's title and background image).
  $info['server_theme_content__hero_header'] = [
    'variables' => [
      'title' => NULL,
      'image' => NULL,
    ],
  ];

  $info['server_theme_content__body'] = [
    'variables' => [
      'content' => NULL,
    ],
  ];

  $info['server_theme_user_image'] = [
    'variables' => [
      'image' => NULL,
      'image_alt' => NULL,
      'initials' => NULL,
    ],
  ];

  $info['server_theme_single_person_image'] = [
    'variables' => [
      'image' => NULL,
      'image_alt' => NULL,
      'initials' => NULL,
      'name' => NULL,
      'designation' => NULL,
      'email' => NULL,
      'phone' => NULL,
      'role' => NULL,
    ],
  ];

  $info['server_theme_multi_person_image'] = [
    'variables' => [
      'image' => NULL,
      'image_alt' => NULL,
      'initials' => NULL,
      'name' => NULL,
      'designation' => NULL,
      'email' => NULL,
      'phone' => NULL,
      'role' => NULL,
      'rows' => NULL,
      'columns' => NULL,
    ],
  ];

  $info['server_theme_footer'] = [
    'variables' => [],
  ];

  $info['server_theme_page_title'] = [
    'variables' => [
      'title' => NULL,
    ],
  ];

  $info['server_theme_container_wide'] = [
    'variables' => [
      'element' => NULL,
    ],
  ];

  return $info;
}

/**
 * Implements hook_preprocess_page().
 */
function server_theme_preprocess_page(array &$variables) {
  $variables['page']['footer'] = ['#theme' => 'server_theme_footer'];
}

/**
 * Implements hook_preprocess_page_title().
 *
 * On node view pages, we'll take care of showing the page title (i.e. the
 * <h1> element).
 */
function server_theme_preprocess_page_title(array &$variables) {
  $node = \Drupal::routeMatch()->getParameter('node');

  if ($node) {
    $variables['title'] = '';
  }
}

/**
 * Implements hook_theme_suggestions_page_title_alter().
 *
 * Use our own page title theme.
 */
function server_theme_theme_suggestions_page_title_alter(array &$suggestions, array $variables) {
  $suggestions[] = 'server_theme_page_title';
}

/**
 * Implements hook_preprocess_page().
 */
function server_theme_preprocess_node(array &$variables) {
  $route_match = \Drupal::routeMatch();
  if ($route_match->getRouteName() == 'entity.node.canonical') {
    $node = $variables['node'];
    if ($node->get('type')->getString() == "group_blog") {
      $node = $route_match->getParameter('node');
      $user = User::load(\Drupal::currentUser()->id());
      if (!(Og::isMember($node, $user))) {
        $url = Url::fromRoute('og.subscribe', [
          'entity_type_id' => 'node',
          'group' => $node->id(),
        ]);
        $grp_info = $node->getTitle();
        $username = $user->get('name')->value;
        $subscribe_link = Link::fromTextAndUrl(t('click here'), $url)->toString();
        $variables['content']['og_group'][0] = [
          '#type' => 'html_tag',
          '#tag' => 'div',
          '#value' => t('Hi @username, @subscribe_link if you would like to subsribe to this group called @group_name',
              [
                '@username' => $username,
                '@subscribe_link' => $subscribe_link,
                '@group_name' => $grp_info,
              ]
          ),
        ];
        $variables['user_info'] = $username;
        $variables['og_subscription_url'] = $url;
        $variables['og_subscription_group_info'] = $grp_info;
      }
      else {
        $variables['user_info'] = "";
        $variables['og_subscription_url'] = "";
        $variables['og_subscription_group_info'] = "";
      }
      $variables['#cache']['max-age'] = 0;
    }
  }
}